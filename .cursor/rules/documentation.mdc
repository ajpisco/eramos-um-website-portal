---
description: Guide for handling the application documentation
globs: **/*
alwaysApply: true
---
# Documentation Sync Rules for Cursor AI

> Ensure all changes made to the codebase reflect accurately in the documentation stored under the `/docs` directory.

---

## âœ… General Rules

1. **Update Docs with Every Code Change**
   - Any new feature, change, or removal must be documented in the relevant markdown file.

2. **Match Feature Updates to `/docs/features/`**
   - When updating feature logic (e.g. Events, Groups, RSVP), update the corresponding doc in `/docs/features/`.

3. **Keep Setup and Deployment Accurate**
   - Update `/docs/getting-started/setup.md` and `/deployment.md` when:
     - Installing new packages
     - Changing environment variables
     - Updating commands

4. **Sync API and Supabase Changes**
   - Update:
     - `/docs/backend/database.md` â†’ when models change
     - `/docs/backend/api-routes.md` â†’ when new endpoints or logic are added
     - `/docs/backend/supabase.md` â†’ when auth or configuration changes

---

## ðŸŽ¨ Design-Related

5. **Update UI Documentation**
   - Changes in shared UI components, theming, or layout should be reflected in:
     - `/docs/design/components.md`
     - `/docs/design/ui-guidelines.md`

---

## ðŸ§  Glossary & Terms

6. **Define New Concepts**
   - Add new terms or features that may be reused in `/docs/glossary.md`.

---

## ðŸ“š Best Practices

7. **Keep Examples Accurate**
   - Code snippets and usage examples in docs should match the latest implementation.

8. **No Silent Deprecations**
   - Donâ€™t remove doc entries unless the feature is fully removed from the app.

9. **Maintain Doc Integrity Per PR**
   - Each PR should reflect a 1:1 match between code logic and documentation changes where applicable.

---

## ðŸ’¡ Tip for Cursor AI

> Before finalizing changes, check if a doc update is needed and suggest the specific file to modify. Use concise language and mirror code terminology.
